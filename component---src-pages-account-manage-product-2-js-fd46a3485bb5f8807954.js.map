{"version":3,"sources":["webpack:///./src/pages/account/manageProduct2.js"],"names":["App","id","configureCol","property","headerText","primaryKey","render","data","type","ReactHtmlParser","description","bidEndAt","format","parseISO","iso","available","startBid","photo","href","url","suffix","objectClass","columns","query","q","fetchData","action","params","storeId"],"mappings":"4FACA,qGA+DeA,UAzDH,SAAC,GAAY,IAAVC,EAAS,EAATA,GACPC,EAAe,CACnB,CACIC,SAAU,WACVC,WAAY,GACZC,YAAY,EACZC,OAAQ,SAACC,GAAD,OAAU,2CAEtB,CACEJ,SAAU,OACVC,WAAY,QAEd,CACED,SAAU,cACVC,WAAY,OACZI,KAAM,WACNF,OAAQ,SAACC,GAAD,OAAU,wCAAKE,IAAgBF,EAAKG,aAA1B,OAEpB,CACIP,SAAU,WACVC,WAAY,SACZI,KAAM,iBACNF,OAAQ,SAACC,GAAD,OAAU,wCAAKA,EAAKI,SAAWC,YAAOC,YAASN,EAAKI,SAASG,KAAM,uBAAyB,UAAlF,OAEtB,CACIX,SAAU,YACVC,WAAY,OACZE,OAAQ,SAACC,GAAD,OAAU,wCAAKA,EAAKQ,UAAY,MAAQ,KAA9B,OAEtB,CACIZ,SAAU,WACVC,WAAY,WACZE,OAAQ,SAACC,GAAD,OAAU,wCAAKA,EAAKS,SAAV,OAEtB,CAEIZ,WAAY,QACZE,OAAQ,SAACC,GAAD,OAAU,wCAAKA,EAAKU,MAAQ,kBAAC,IAAD,CAAQC,KAAMX,EAAKU,MAAME,KAAzB,UAAgD,QAAlE,QAGxB,OACE,oCACE,kBAAC,IAAD,CACEC,OAAO,UACPC,YAAY,UACZC,QAASpB,EACTqB,MAAO,SAAAC,GAAC,OAAIA,GACZC,UAAW,CACTC,OAAQ,qBACRC,OAAQ,CACJC,QAAS3B","file":"component---src-pages-account-manage-product-2-js-fd46a3485bb5f8807954.js","sourcesContent":["\nimport React from \"react\";\nimport DataGrid from '../../containers/DataGrid'\nimport ReactHtmlParser from 'react-html-parser';\nimport { Anchor } from 'grommet'\nimport { format, parseISO } from 'date-fns';\n\nconst App = ({ id }) => {\n  const configureCol = [\n    {\n        property: 'objectId',\n        headerText: '',\n        primaryKey: true,\n        render: (data) => <> </>\n    },\n    {\n      property: 'name',\n      headerText: 'Name'\n    },\n    {\n      property: 'Description',\n      headerText: 'Info',\n      type: 'Textarea',\n      render: (data) => <> { ReactHtmlParser(data.description) } </>\n    },\n    {\n        property: 'bidEndAt',\n        headerText: 'BidEnd',\n        type: 'DateTimePicker',\n        render: (data) => <> { data.bidEndAt ? format(parseISO(data.bidEndAt.iso), 'yyyy MMM dd HH:mm:s') : 'Not Set' } </>\n    },\n    {\n        property: 'available',\n        headerText: 'Show',\n        render: (data) => <> { data.available ? 'Yes' : 'No' } </>\n    },\n    {\n        property: 'startBid',\n        headerText: 'startBid',\n        render: (data) => <> { data.startBid } </>\n    },\n    {\n\n        headerText: 'Image',\n        render: (data) => <> { data.photo ? <Anchor href={data.photo.url}> View </Anchor> : 'Empty' } </>\n    }\n  ]\n  return (\n    <>\n      <DataGrid \n        suffix=\"ForUser\"\n        objectClass=\"Product\"\n        columns={configureCol}\n        query={q => q}\n        fetchData={{\n          action: 'findProductForUser',\n          params: {\n              storeId: id\n          }\n        }}\n      />\n    </>\n  );\n};\nexport default App;\n"],"sourceRoot":""}