{"version":3,"sources":["webpack:///./src/library/store.js","webpack:///./src/pages/dashboard.js"],"names":["getStoreByRole","storeRoles","limit","searchObject","ascending","role","c","f","v","t","Component","_userContext","React","useContext","UserContext","useState","stores","setStores","useEffect","roles","filter","r","includes","map","get","length","then","href","store","i","key"],"mappings":"4FAAA,4DAIaA,EAAiB,SAACC,EAAiBC,GACxC,YADsD,IAA/BD,MAAa,SAAkB,IAAdC,MAAQ,GACzCC,YAAa,QAAS,CAEzBC,UAAW,YACXC,KAAM,CACJC,EAAG,QACHC,EAAG,cACHC,EAAGP,EACHQ,EAAG,e,kCCZjB,oEAwCeC,UAnCG,WAEhB,IAAMC,EAAeC,IAAMC,WAAWC,KAFhB,EAIMC,mBAAS,MAA9BC,EAJe,KAIPC,EAJO,KAetB,OATAC,qBAAU,WACR,IAAMjB,EAAaU,GAAgBA,EAAaQ,MAAMC,QAAO,SAAAC,GAAC,OAAIA,EAAEC,SAAS,cAAc,GAC1FC,KAAI,SAAAF,GAAC,OAAIA,EAAEG,IAAI,WACbvB,GAAcA,EAAWwB,QAC1BzB,YAAeC,EAAY,GAC1ByB,KAAKT,KAEP,CAACN,IAGF,oCACE,qDACA,kBAAC,IAAD,CAAQgB,KAAK,eAAb,SAFF,2BAIIX,GAAUA,EAAOO,KAAI,SAACK,EAAOC,GAAR,OAAc,oCACjC,uBAAGC,IAAKD,GACN,kBAAC,IAAD,CAAQF,KAAI,UAAYC,EAAMJ,IAAI,eAAlC,UAAmE,IADrE,eAEeI,EAAMJ,IAAI,QAFzB,gCAMJ,2BACE,kBAAC,IAAD,CAAQG,KAAI,YAAZ,UADF","file":"component---src-pages-dashboard-js-4ada8e3928baaeb7777f.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { searchObject } from \"./parse\";\n\n\nexport const getStoreByRole = (storeRoles = [], limit = 1) => {\n        return searchObject(\"Store\", {\n           \n            ascending: 'createdAt',\n            role: {\n              c: '_Role',\n              f: 'containedIn',\n              v: storeRoles,\n              t: 'pointer'\n            }\n          })\n}","import React, { useEffect, useState } from \"react\";\nimport { Anchor } from \"grommet\";\nimport { getStoreByRole } from \"../library/store\";\nimport UserContext from '../context/UserContext'\n\nconst Component = () => {\n\n  const _userContext = React.useContext(UserContext)\n\n  const [stores, setStores] = useState(null);\n\n  useEffect(() => {\n    const storeRoles = _userContext && _userContext.roles.filter(r => r.includes('Store-')) || []\n    .map(r => r.get('name'))\n    if(storeRoles && storeRoles.length) {\n      getStoreByRole(storeRoles, 1)\n      .then(setStores)\n    }\n  }, [_userContext]);\n\n  return (\n    <>\n      <p>Welcome to bidbid.live</p>\n      <Anchor href=\"/setupstore\">Setup</Anchor> a store to get started.\n      {\n        stores && stores.map((store, i) => <>\n          <p key={i}>\n            <Anchor href={`/store/${store.get(\"uniqueName\")}`}>Upload</Anchor>{\" \"}\n            products to {store.get(\"name\")} store to start selling.\n          </p>\n        </>)\n      }\n      <p>\n        <Anchor href={`/profile`}>Update</Anchor> your contact info to start\n        bidding.\n      </p>\n    </>\n  );\n};\n\nexport default Component;\n"],"sourceRoot":""}