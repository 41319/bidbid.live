{"version":3,"sources":["webpack:///./src/containers/Order/OrderFormConfig.js","webpack:///./node_modules/grommet/es6/components/Paragraph/StyledParagraph.js","webpack:///./node_modules/grommet/es6/components/Paragraph/Paragraph.js","webpack:///./src/containers/Order/index.js","webpack:///./src/pages/order.js"],"names":["configureCol","property","headerText","render","data","product","name","bid","primaryKey","colorStyle","props","colorProp","theme","fontFamily","paragraph","font","family","StyledParagraph","p","withConfig","displayName","componentId","size","height","fillProp","maxWidth","textAlign","extend","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","defaultProps","setPrototypeOf","Paragraph","_ref","ref","color","fill","rest","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","createElement","Home","storeId","useState","carts","setCarts","total","setTotal","setHavePendingCart","useEffect","getCartForStore","then","e","a","Promise","all","map","o","get","fetch","newCarts","newTotal","reduce","n","Box","DataGrid","hideCRUDForm","objectClass","columns","Config","query","q","datasource","Heading","level","getMyCart","cart","cartAndProducts"],"mappings":"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","file":"component---src-pages-order-js-0383cdf35a68e9225486.js","sourcesContent":["import React from \"react\";\n\nconst configureCol = [\n  {\n    property: \"product\",\n    headerText: \"Product\",\n\n    render: (data) => <> {data.product.name}</>,\n  },\n  {\n    property: \"bid\",\n    headerText: \"Amount\",\n\n    render: (data) => <> {`$${data.bid}`}</>,\n  },\n  {\n    property: \"status\",\n    headerText: \"Status\",\n  },\n  {\n    property: \"objectId\",\n    headerText: \"\",\n    primaryKey: true,\n    render: (data) => <> </>,\n  },\n];\n\nexport default configureCol;\n","import styled, { css } from 'styled-components';\nimport { genericStyles, normalizeColor, textAlignStyle } from '../../utils';\nimport { defaultProps } from '../../default-props';\nvar colorStyle = css([\"color:\", \";\"], function (props) {\n  return normalizeColor(props.colorProp, props.theme);\n});\n\nvar sizeStyle = function sizeStyle(props) {\n  var size = props.size || 'medium';\n  var data = props.theme.paragraph[size];\n  return css([\"font-size:\", \";line-height:\", \";max-width:\", \";\"], data.size, data.height, props.fillProp ? 'none' : data.maxWidth);\n};\n\nvar fontFamily = css([\"font-family:\", \";\"], function (props) {\n  return props.theme.paragraph.font.family;\n});\nvar StyledParagraph = styled.p.withConfig({\n  displayName: \"StyledParagraph\",\n  componentId: \"tbetod-0\"\n})([\"\", \" \", \" \", \" \", \" \", \" \", \"\"], genericStyles, function (props) {\n  return sizeStyle(props);\n}, function (props) {\n  return props.textAlign && textAlignStyle;\n}, function (props) {\n  return props.colorProp && colorStyle;\n}, function (props) {\n  return props.theme.paragraph.font && props.theme.paragraph.font.family && fontFamily;\n}, function (props) {\n  return props.theme.paragraph && props.theme.paragraph.extend;\n});\nStyledParagraph.defaultProps = {};\nObject.setPrototypeOf(StyledParagraph.defaultProps, defaultProps);\nexport { StyledParagraph };","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef } from 'react';\nimport { StyledParagraph } from './StyledParagraph';\nvar Paragraph = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var color = _ref.color,\n      fill = _ref.fill,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"color\", \"fill\"]);\n\n  return /*#__PURE__*/React.createElement(StyledParagraph, _extends({\n    ref: ref,\n    colorProp: color,\n    fillProp: fill\n  }, rest));\n});\nParagraph.displayName = 'Paragraph';\nvar ParagraphDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line global-require\n  ParagraphDoc = require('./doc').doc(Paragraph);\n}\n\nvar ParagraphWrapper = ParagraphDoc || Paragraph;\nexport { ParagraphWrapper as Paragraph };","import React, { useEffect, useState } from \"react\";\nimport { Text, Accordion, AccordionPanel, Box, Heading } from \"grommet\";\nimport { getCartForStore } from \"../../library/parse\";\nimport DataGrid from \"../DataGrid\";\nimport Config from \"./OrderFormConfig\";\n\nimport PaymentInstruction from \"../../components/PaymentInstruction\";\n\nconst Home = ({ storeId }) => {\n  const [carts, setCarts] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [showPaymentInstruction, setShowPaymentInstruction] = useState(false);\n  const [havePendingCart, setHavePendingCart] = useState(false);\n  const [transactionNotes, setTranscationNotes] = useState(\"\");\n\n  useEffect(() => {\n    getCartForStore(storeId).then(async (e) => {\n      const newCarts = await Promise.all(\n        e.map(async (o) => {\n          await o.get(\"product\").fetch();\n          if (o.get(\"status\") === \"Unpaid\") {\n            setHavePendingCart(true);\n          }\n          return o;\n        })\n      );\n      setCarts(newCarts);\n    });\n  }, []);\n\n  useEffect(() => {\n    const newTotal = carts.reduce((p, n) => {\n      return n.get(\"bid\") + p;\n    }, 0);\n    setTotal(newTotal);\n  }, [carts]);\n  return (\n    <Box>\n      <DataGrid\n        hideCRUDForm\n        objectClass=\"Cart\"\n        columns={Config}\n        query={(q) => q}\n        datasource={carts}\n      />\n      <Box>\n        <Heading level={4}>Pending Payment: ${`${total}`}</Heading>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { Text, Accordion, AccordionPanel, Box, Button } from \"grommet\";\nimport { getMyCart } from \"../library/parse\";\nimport Order from \"../containers/Order\";\n\nconst Home = () => {\n  const [carts, setCarts] = useState([]);\n  useEffect(() => {\n    getMyCart().then(async (e) => {\n      const cartAndProducts = await Promise.all(\n        e.map(async (cart) => {\n          return await cart\n            .get(\"product\")\n            .fetch()\n            .then((product) => ({\n              cart,\n              product,\n            }));\n        })\n      );\n      setCarts(cartAndProducts);\n    });\n  }, []);\n  return (\n    <>\n      <Order />\n    </>\n  );\n};\n\nexport default Home;\n"],"sourceRoot":""}