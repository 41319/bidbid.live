{"version":3,"sources":["webpack:///./node_modules/grommet-icons/es6/icons/Cluster.js","webpack:///./src/pages/account/mystore.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","props","createElement","StyledIcon","viewBox","a11yTitle","fill","stroke","strokeWidth","d","App","configureCol","property","headerText","type","render","data","ReactHtmlParser","description","whatsapp","onClick","navigate","objectId","DataGrid","width","objectClass","columns","query","q","fetchData","action","params","user","f","t","c","v","Parse","User","current","id"],"mappings":"yKAAA,SAASA,IAeP,OAdAA,EAAWC,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAASF,UAAUD,GAEvB,IAAK,IAAII,KAAOD,EACVN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAC/CL,EAAOK,GAAOD,EAAOC,IAK3B,OAAOL,IAGOS,MAAMC,KAAMR,WAKvB,IAAI,EAAU,SAAiBS,GACpC,OAAoB,IAAMC,cAAcC,EAAA,EAAYhB,EAAS,CAC3DiB,QAAS,YACTC,UAAW,WACVJ,GAAqB,IAAMC,cAAc,OAAQ,CAClDI,KAAM,OACNC,OAAQ,OACRC,YAAa,IACbC,EAAG,uK,wBCkCQC,UAvDH,WACV,IAAMC,EAAe,CACnB,CACEC,SAAU,OACVC,WAAY,QAEd,CACED,SAAU,cACVC,WAAY,OACZC,KAAM,WACNC,OAAQ,SAACC,GAAD,OAAU,wCAAIC,IAAgBD,EAAKE,aAAzB,OAEpB,CACEN,SAAU,WACVC,WAAY,WACZE,OAAQ,SAACC,GAAD,OAAU,wCAAIC,IAAgBD,EAAKG,UAAzB,OAEpB,CACEP,SAAU,WACVC,WAAY,UACZE,OAAQ,SAACC,GAAD,OACN,oCACE,kBAAC,EAAD,CACEI,QAAS,WACPC,YAAS,iCAAiCL,EAAKM,iBAO3D,OACE,oCACE,kBAACC,EAAA,EAAD,CACEC,MAAM,OACNC,YAAY,QACZC,QAASf,EACTgB,MAAO,SAACC,GAAD,OAAOA,GACdC,UAAW,CACTC,OAAQ,cACRC,OAAQ,CACNJ,MAAO,CACLK,KAAM,CACJC,EAAG,UACHC,EAAG,UACHC,EAAG,OACHC,EAAGC,KAASA,IAAMC,MAAQD,IAAMC,KAAKC,UAAUC","file":"component---src-pages-account-mystore-js-1b8878d820e0c2f1364a.js","sourcesContent":["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { StyledIcon } from '../StyledIcon';\nexport var Cluster = function Cluster(props) {\n  return /*#__PURE__*/React.createElement(StyledIcon, _extends({\n    viewBox: \"0 0 24 24\",\n    a11yTitle: \"Cluster\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#000\",\n    strokeWidth: \"2\",\n    d: \"M8,9 L16,9 L16,1 L8,1 L8,9 Z M1,23 L9,23 L9,15 L1,15 L1,23 Z M15,23 L23,23 L23,15 L15,15 L15,23 Z M5,15 L8,9 L5,15 Z M10,19 L14,19 L10,19 Z M16,9 L19,15 L16,9 Z\"\n  }));\n};","import React from \"react\";\nimport DataGrid from \"../../containers/DataGrid\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport { Cluster } from \"grommet-icons\";\nimport Parse from \"../../library/parse\";\nimport { navigate } from \"gatsby\";\n\nconst App = () => {\n  const configureCol = [\n    {\n      property: \"name\",\n      headerText: \"Name\",\n    },\n    {\n      property: \"description\",\n      headerText: \"Info\",\n      type: \"Textarea\",\n      render: (data) => <> {ReactHtmlParser(data.description)} </>,\n    },\n    {\n      property: \"whatsapp\",\n      headerText: \"Whatsapp\",\n      render: (data) => <> {ReactHtmlParser(data.whatsapp)} </>,\n    },\n    {\n      property: \"objectId\",\n      headerText: \"Product\",\n      render: (data) => (\n        <>\n          <Cluster\n            onClick={() => {\n              navigate(`/account/store/manageproduct2/${data.objectId}`);\n            }}\n          />\n        </>\n      ),\n    },\n  ];\n  return (\n    <>\n      <DataGrid\n        width=\"100%\"\n        objectClass=\"Store\"\n        columns={configureCol}\n        query={(q) => q}\n        fetchData={{\n          action: \"searchStore\",\n          params: {\n            query: {\n              user: {\n                f: \"equalTo\",\n                t: \"pointer\",\n                c: \"User\",\n                v: Parse && Parse.User && Parse.User.current().id,\n              },\n            },\n          },\n        }}\n      />\n    </>\n  );\n};\nexport default App;\n"],"sourceRoot":""}