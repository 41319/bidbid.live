{"version":3,"sources":["webpack:///./src/pages/account/manageProduct2.js","webpack:///./src/pages/account/mystore.js","webpack:///./src/containers/StoreList/index.js","webpack:///./src/pages/account/store.js","webpack:///./src/pages/account/editstore.js"],"names":["App","id","configureCol","property","headerText","primaryKey","render","data","type","ReactHtmlParser","description","bidEndAt","format","parseISO","iso","available","startBid","photo","href","url","suffix","objectClass","columns","query","q","fetchData","action","params","storeId","Home","useState","stores","setStores","useEffect","findAllstore","then","e","level","publicPage","displayAnchor","isPublic","align","alignContent","justify","dataList","map","title","get","cta","fill","basepath","path"],"mappings":"kGAAA,qGA+EeA,UAzEH,SAAC,GAAY,IAAVC,EAAS,EAATA,GACPC,EAAe,CACnB,CACEC,SAAU,WACVC,WAAY,GACZC,YAAY,EACZC,OAAQ,SAACC,GAAD,OAAU,2CAEpB,CACEJ,SAAU,OACVC,WAAY,QAEd,CACED,SAAU,cACVC,WAAY,OACZI,KAAM,WACNF,OAAQ,SAACC,GAAD,OAAU,wCAAIE,IAAgBF,EAAKG,aAAzB,OAEpB,CACEP,SAAU,WACVC,WAAY,SACZI,KAAM,iBACNF,OAAQ,SAACC,GAAD,OACN,oCACG,IACAA,EAAKI,SACFC,YAAOC,YAASN,EAAKI,SAASG,KAAM,uBACpC,UAAW,OAIrB,CACEX,SAAU,YACVC,WAAY,OACZI,KAAM,WACNF,OAAQ,SAACC,GAAD,OAAU,wCAAIA,EAAKQ,UAAY,MAAQ,KAA7B,OAEpB,CACEZ,SAAU,WACVC,WAAY,WACZE,OAAQ,SAACC,GAAD,OAAU,wCAAIA,EAAKS,SAAT,OAEpB,CACEZ,WAAY,QACZE,OAAQ,SAACC,GAAD,OACN,oCACG,IACAA,EAAKU,MACJ,kBAAC,IAAD,CAAQC,KAAMX,EAAKU,MAAME,KAAzB,UAEA,QACC,QAKX,OACE,oCACE,kBAAC,IAAD,CACEC,OAAO,UACPC,YAAY,UACZC,QAASpB,EACTqB,MAAO,SAACC,GAAD,OAAOA,GACdC,UAAW,CACTC,OAAQ,qBACRC,OAAQ,CACNC,QAAS3B,S,kCCxErB,oEAkBe4B,UAbF,WAAO,IAAD,EACWC,mBAAS,IAA9BC,EADU,KACFC,EADE,KAKjB,OAHAC,qBAAU,WACRC,cAAeC,MAAK,SAACC,GAAD,OAAOJ,EAAUI,QACpC,IAED,oCACE,kBAAC,IAAD,CAASC,MAAO,GAAhB,cACA,kBAAC,IAAD,CAAWN,OAAQA,O,kCCbzB,6DA+BeF,IA3BF,SAAC,GAA4B,IAA1BE,EAAyB,EAAzBA,OAAQO,EAAiB,EAAjBA,WAChBC,EAAgB,SAACH,EAAGI,GAAJ,OACpBA,EACE,kBAAC,IAAD,CAAQtB,KAAI,UAAYkB,EAAEnC,IAA1B,eAEA,oCACE,kBAAC,IAAD,CAAQiB,KAAI,4BAA8BkB,EAAEnC,IAA5C,QACA,kBAAC,IAAD,CAAQiB,KAAI,gCAAkCkB,EAAEnC,IAAhD,kBAGA,kBAAC,IAAD,CAAQiB,KAAI,iCAAmCkB,EAAEnC,IAAjD,0BAKN,OACE,kBAAC,IAAD,CAAKwC,MAAM,SAASC,aAAa,SAASC,QAAQ,UAChD,kBAAC,IAAD,CACEC,SAAUb,EAAOc,KAAI,SAACT,GAAD,MAAQ,CAC3BU,MAAOV,EAAEW,IAAI,QACbC,IAAKT,EAAcH,EAAGE,Y,kCCxBhC,wGAoBetC,UAZH,WACV,OACE,kBAAC,IAAD,CAAKiD,MAAM,GACT,kBAAC,SAAD,CAAQC,SAAS,kBACf,kBAAC,UAAD,CAAWC,KAAK,mBAChB,kBAAC,UAAD,CAASA,KAAK,MACd,kBAAC,UAAD,CAAoBA,KAAK,uBACzB,kBAAC,UAAD,CAAqBA,KAAK,4B,kCCflC,iEA8BenD,UA1BH,WACV,IAAME,EAAe,CACnB,CACEC,SAAU,OACVC,WAAY,QAEd,CACED,SAAU,cACVC,WAAY,cACZI,KAAM,WACNF,OAAQ,SAACC,GAAD,OAAU,wCAAIE,IAAgBF,EAAKG,aAAzB,QAGtB,OACE,oCACE,kBAAC,IAAD,CACEW,YAAY,QACZC,QAASpB,EACTqB,MAAO,SAACC,GAAD,OAAOA,GACdC,UAAW,CACTC,OAAQ","file":"component---src-pages-account-store-js-c8a114cda317701ec4fd.js","sourcesContent":["import React from \"react\";\nimport DataGrid from \"../../containers/DataGrid\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport { Anchor } from \"grommet\";\nimport { format, parseISO } from \"date-fns\";\n\nconst App = ({ id }) => {\n  const configureCol = [\n    {\n      property: \"objectId\",\n      headerText: \"\",\n      primaryKey: true,\n      render: (data) => <> </>,\n    },\n    {\n      property: \"name\",\n      headerText: \"Name\",\n    },\n    {\n      property: \"Description\",\n      headerText: \"Info\",\n      type: \"Textarea\",\n      render: (data) => <> {ReactHtmlParser(data.description)} </>,\n    },\n    {\n      property: \"bidEndAt\",\n      headerText: \"BidEnd\",\n      type: \"DateTimePicker\",\n      render: (data) => (\n        <>\n          {\" \"}\n          {data.bidEndAt\n            ? format(parseISO(data.bidEndAt.iso), \"yyyy MMM dd HH:mm:s\")\n            : \"Not Set\"}{\" \"}\n        </>\n      ),\n    },\n    {\n      property: \"available\",\n      headerText: \"Show\",\n      type: \"CheckBox\",\n      render: (data) => <> {data.available ? \"Yes\" : \"No\"} </>,\n    },\n    {\n      property: \"startBid\",\n      headerText: \"startBid\",\n      render: (data) => <> {data.startBid} </>,\n    },\n    {\n      headerText: \"Image\",\n      render: (data) => (\n        <>\n          {\" \"}\n          {data.photo ? (\n            <Anchor href={data.photo.url}> View </Anchor>\n          ) : (\n            \"Empty\"\n          )}{\" \"}\n        </>\n      ),\n    },\n  ];\n  return (\n    <>\n      <DataGrid\n        suffix=\"ForUser\"\n        objectClass=\"Product\"\n        columns={configureCol}\n        query={(q) => q}\n        fetchData={{\n          action: \"findProductForUser\",\n          params: {\n            storeId: id,\n          },\n        }}\n      />\n    </>\n  );\n};\nexport default App;\n","import React, { useEffect, useState } from \"react\";\nimport StoreList from \"../../containers/StoreList\";\nimport { findAllstore } from \"../../helpers\";\nimport { Heading } from \"grommet\";\n\nconst Home = () => {\n  const [stores, setStores] = useState([]);\n  useEffect(() => {\n    findAllstore().then((e) => setStores(e));\n  }, []);\n  return (\n    <>\n      <Heading level={3}> My Store </Heading>\n      <StoreList stores={stores} />\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport CardListing from \"../../components/CardList\";\nimport { Box, Anchor } from \"grommet\";\n\nconst Home = ({ stores, publicPage }) => {\n  const displayAnchor = (e, isPublic) =>\n    isPublic ? (\n      <Anchor href={`/store/${e.id}`}>Go to Store</Anchor>\n    ) : (\n      <>\n        <Anchor href={`/account/store/editstore/${e.id}`}>Edit</Anchor>\n        <Anchor href={`/account/store/manageproduct/${e.id}`}>\n          Manage Product\n        </Anchor>\n        <Anchor href={`/account/store/manageproduct2/${e.id}`}>\n          Manage Product (New)\n        </Anchor>\n      </>\n    );\n  return (\n    <Box align=\"center\" alignContent=\"center\" justify=\"center\">\n      <CardListing\n        dataList={stores.map((e) => ({\n          title: e.get(\"name\"),\n          cta: displayAnchor(e, publicPage),\n        }))}\n      />\n    </Box>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Router } from \"@reach/router\";\nimport MyStore from \"./mystore\";\nimport EditStore from \"./editstore\";\nimport ManageStoreProduct from \"./manageProduct\";\nimport ManageStoreProduct2 from \"./manageProduct2\";\nimport { Box } from \"grommet\";\n\nconst App = () => {\n  return (\n    <Box fill={true}>\n      <Router basepath=\"/account/store\">\n        <EditStore path=\"/editstore/:id\" />\n        <MyStore path=\"/\" />\n        <ManageStoreProduct path=\"/manageproduct/:id\" />\n        <ManageStoreProduct2 path=\"/manageproduct2/:id\" />\n      </Router>\n    </Box>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport DataGrid from \"../../containers/DataGrid\";\nimport ReactHtmlParser from \"react-html-parser\";\n\nconst App = () => {\n  const configureCol = [\n    {\n      property: \"name\",\n      headerText: \"Name\",\n    },\n    {\n      property: \"description\",\n      headerText: \"Description\",\n      type: \"Textarea\",\n      render: (data) => <> {ReactHtmlParser(data.description)} </>,\n    },\n  ];\n  return (\n    <>\n      <DataGrid\n        objectClass=\"Store\"\n        columns={configureCol}\n        query={(q) => q}\n        fetchData={{\n          action: \"findstore\",\n        }}\n      />\n    </>\n  );\n};\nexport default App;\n"],"sourceRoot":""}